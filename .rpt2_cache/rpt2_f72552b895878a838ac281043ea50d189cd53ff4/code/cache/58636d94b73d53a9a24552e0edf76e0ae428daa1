{"code":"import * as tslib_1 from \"tslib\";\r\nimport { ReactCrudMasterActionTypeNames, initialReactCrudMasterStateProps, } from './reactCrudMaster.types';\r\nimport update from 'immutability-helper';\r\nimport { REACT_CRUD_MASTER } from '../../actions/actionNamespaces';\r\nexport var initialState = {\r\n    colModels: [],\r\n    data: [],\r\n    width: 0,\r\n    sortColumn: null,\r\n    selectedRow: null,\r\n    startOffset: 0,\r\n    columnToResize: null,\r\n    show: false,\r\n    RCMID: Date.now(),\r\n    modalState: null,\r\n    tableWidth: 0,\r\n    emptyModalState: null\r\n};\r\nexport function reactCrudMasterReducer(state, action) {\r\n    if (state === void 0) { state = initialReactCrudMasterStateProps(); }\r\n    if (action.namespace != REACT_CRUD_MASTER)\r\n        return state;\r\n    switch (action.type) {\r\n        case ReactCrudMasterActionTypeNames.SET_COL_MODELS: {\r\n            action = action;\r\n            return Object.assign({}, tslib_1.__assign({}, state), {\r\n                colModels: action.payload.colModels,\r\n                tableWidth: action.payload.tableWidth,\r\n            });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.SET_DATA: {\r\n            var typedAction = action;\r\n            return Object.assign({}, tslib_1.__assign({}, state), {\r\n                data: typedAction.payload.data\r\n            });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.RESIZE_COLUMN:\r\n            action = action;\r\n            var pageX_1 = action.payload.e.pageX;\r\n            var colModels = state.colModels.map(function (colModel) {\r\n                if (colModel.name == state.columnToResize.name) {\r\n                    if (state.startOffset + pageX_1 >= state.columnToResize.minWidth) {\r\n                        colModel.width = state.startOffset + pageX_1;\r\n                    }\r\n                }\r\n                return colModel;\r\n            });\r\n            var tableWidth_1 = 0;\r\n            colModels.forEach(function (colModel) {\r\n                tableWidth_1 += colModel.width;\r\n            });\r\n            var newState = update(state, { colModels: { $set: colModels }, tableWidth: { $set: tableWidth_1 } });\r\n            return newState;\r\n        case ReactCrudMasterActionTypeNames.SET_COLUMN_TO_RESIZE: {\r\n            var typedAction = action;\r\n            var _a = tslib_1.__assign({}, typedAction.payload), column = _a.column, e = _a.e;\r\n            if (column != null)\r\n                return Object.assign({}, tslib_1.__assign({}, state), { columnToResize: column, startOffset: e.target.parentNode.offsetWidth - e.pageX });\r\n            return Object.assign({}, tslib_1.__assign({}, state), { columnToResize: null });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.SET_INITIAL_TABLE_OFFSET_WIDTH: {\r\n            var tableBody = document.getElementById(\"CMID-\" + state.RCMID);\r\n            return Object.assign({}, tslib_1.__assign({}, state), { width: tableBody.offsetWidth });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.SELECT_ROW: {\r\n            var typedAction = action;\r\n            return Object.assign({}, tslib_1.__assign({}, state), { selectedRow: typedAction.payload.row });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.CHANGE_ORDER_DIRECTION: {\r\n            var typedAction_1 = action;\r\n            var colModels_1 = state.colModels.map(function (column) {\r\n                if (column.name == typedAction_1.payload.column.name) {\r\n                    if (column.orderDirection === \"asc\")\r\n                        column.orderDirection = \"desc\";\r\n                    else if (column.orderDirection === \"desc\")\r\n                        column.orderDirection = \"\";\r\n                    else\r\n                        column.orderDirection = \"asc\";\r\n                }\r\n                else {\r\n                    column.orderDirection = \"\";\r\n                }\r\n                return column;\r\n            });\r\n            return Object.assign({}, tslib_1.__assign({}, state), { colModels: colModels_1 });\r\n        }\r\n        case ReactCrudMasterActionTypeNames.SET_TABLE_TITLE: {\r\n            var typedAction = action;\r\n            return Object.assign({}, tslib_1.__assign({}, state), { tableTitleProp: typedAction.payload.tableTitle });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//# sourceMappingURL=reactCrudMaster.reducer.js.map","references":["C:/Users/Milan/source/repos/react-crud-master/src/components/reactCrudMaster/reactCrudMaster.types.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/immutability-helper/index.d.ts","C:/Users/Milan/source/repos/react-crud-master/src/actions/actionNamespaces.ts"],"map":"{\"version\":3,\"file\":\"reactCrudMaster.reducer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/components/reactCrudMaster/reactCrudMaster.reducer.ts\"],\"names\":[],\"mappings\":\"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\"}","dtsmap":{"name":"C:/Users/Milan/source/repos/react-crud-master/components/reactCrudMaster/reactCrudMaster.reducer.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"reactCrudMaster.reducer.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../src/components/reactCrudMaster/reactCrudMaster.reducer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EACH,yBAAyB,EAEzB,yBAAyB,EAS5B,MAAM,yBAAyB,CAAA;AAGhC,eAAO,MAAM,YAAY;;;;;;;;;;;;;CAaxB,CAAA;AAED,wBAAgB,sBAAsB,CAClC,KAAK,uCAAgE,EACrE,MAAM,EAAE,yBAAyB,GAClC,yBAAyB,CA4F3B\"}"},"dts":{"name":"C:/Users/Milan/source/repos/react-crud-master/components/reactCrudMaster/reactCrudMaster.reducer.d.ts","writeByteOrderMark":false,"text":"import { ReactCrudMasterActionType, ReactCrudMasterStateProps } from './reactCrudMaster.types';\r\nexport declare const initialState: {\r\n    colModels: never[];\r\n    data: never[];\r\n    width: number;\r\n    sortColumn: null;\r\n    selectedRow: null;\r\n    startOffset: number;\r\n    columnToResize: null;\r\n    show: boolean;\r\n    RCMID: number;\r\n    modalState: null;\r\n    tableWidth: number;\r\n    emptyModalState: null;\r\n};\r\nexport declare function reactCrudMasterReducer(state: ReactCrudMasterStateProps | undefined, action: ReactCrudMasterActionType): ReactCrudMasterStateProps;\r\n//# sourceMappingURL=reactCrudMaster.reducer.d.ts.map"}}

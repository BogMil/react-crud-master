{"code":"import { initialCrudModalStateProps, CrudModalActionTypeNames } from './crudModal.types';\r\nimport update from 'immutability-helper';\r\nimport { CRUD_MODAL } from '../../actions/actionNamespaces';\r\nexport const initialState = {\r\n    colModels: [],\r\n    data: [],\r\n    width: 0,\r\n    sortColumn: null,\r\n    selectedRow: null,\r\n    startOffset: 0,\r\n    columnToResize: null,\r\n    show: false,\r\n    reactableId: Date.now(),\r\n    modalState: null,\r\n    tableWidth: 0,\r\n    emptyModalState: null\r\n};\r\nexport function crudModalReducer(state = initialCrudModalStateProps(), action) {\r\n    if (action.namespace != CRUD_MODAL)\r\n        return state;\r\n    switch (action.type) {\r\n        case CrudModalActionTypeNames.CLOSE_MODAL: {\r\n            return Object.assign({}, Object.assign({}, state), { show: false, rowData: state.emptyRowData });\r\n        }\r\n        case CrudModalActionTypeNames.OPEN_MODAL: {\r\n            return Object.assign({}, Object.assign({}, state), { show: true });\r\n        }\r\n        case CrudModalActionTypeNames.GENERATE_COL_NAME_PROPERTIES_IN_ROW_DATA: {\r\n            let typedAction = action;\r\n            let rowData = {};\r\n            typedAction.payload.colModels.map((colModel) => {\r\n                rowData[colModel.name] = \"\";\r\n            });\r\n            return Object.assign({}, Object.assign({}, state), { rowData, emptyRowData: rowData });\r\n        }\r\n        case CrudModalActionTypeNames.ON_ROW_DATA_CHANGE: {\r\n            let typedAction = action;\r\n            return update(state, { rowData: { [typedAction.payload.name]: { $set: typedAction.payload.value } } });\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n//# sourceMappingURL=crudModal.reducer.js.map","references":["C:/Users/Milan/source/repos/react-crud-master/src/components/crudModal/crudModal.types.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/immutability-helper/index.d.ts","C:/Users/Milan/source/repos/react-crud-master/src/types/colModel.ts","C:/Users/Milan/source/repos/react-crud-master/src/actions/actionNamespaces.ts"],"map":"{\"version\":3,\"file\":\"crudModal.reducer.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/crudModal/crudModal.reducer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAuB,0BAA0B,EAAuB,wBAAwB,EAAkG,MAAM,mBAAmB,CAAA;AAClO,OAAO,MAAM,MAAM,qBAAqB,CAAA;AAExC,OAAO,EAAE,UAAU,EAAE,MAAM,gCAAgC,CAAC;AAC5D,MAAM,CAAC,MAAM,YAAY,GAAG;IACxB,SAAS,EAAE,EAAE;IACb,IAAI,EAAE,EAAE;IACR,KAAK,EAAE,CAAC;IACR,UAAU,EAAE,IAAI;IAChB,WAAW,EAAE,IAAI;IACjB,WAAW,EAAE,CAAC;IACd,cAAc,EAAE,IAAI;IACpB,IAAI,EAAE,KAAK;IACX,WAAW,EAAE,IAAI,CAAC,GAAG,EAAE;IACvB,UAAU,EAAE,IAAI;IAChB,UAAU,EAAE,CAAC;IACb,eAAe,EAAE,IAAI;CACxB,CAAA;AAED,MAAM,UAAU,gBAAgB,CAC5B,QAA6B,0BAA0B,EAAE,EACzD,MAA2B;IAE3B,IAAG,MAAM,CAAC,SAAS,IAAG,UAAU;QAC5B,OAAO,KAAK,CAAC;IAEjB,QAAQ,MAAM,CAAC,IAAI,EAAE;QAEjB,KAAK,wBAAwB,CAAC,WAAW,CAAC,CAAC;YACvC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,oBAAO,KAAK,GAAI,EAAE,IAAI,EAAE,KAAK,EAAE,OAAO,EAAC,KAAK,CAAC,YAAY,EAAC,CAAC,CAAC;SACtF;QAED,KAAK,wBAAwB,CAAC,UAAU,CAAC,CAAC;YACtC,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,oBAAO,KAAK,GAAI,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC;SAC1D;QAED,KAAK,wBAAwB,CAAC,wCAAwC,CAAC,CAAC;YACpE,IAAI,WAAW,GAA8C,MAAM,CAAC;YACpE,IAAI,OAAO,GAAa,EAAE,CAAC;YAE3B,WAAW,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,QAAkB,EAAE,EAAE;gBACrD,OAAO,CAAC,QAAQ,CAAC,IAAI,CAAC,GAAG,EAAE,CAAC;YAChC,CAAC,CAAC,CAAC;YACH,OAAO,MAAM,CAAC,MAAM,CAAC,EAAE,oBAAO,KAAK,GAAI,EAAE,OAAO,EAAE,YAAY,EAAE,OAAO,EAAE,CAAC,CAAC;SAC9E;QAED,KAAK,wBAAwB,CAAC,kBAAkB,CAAC,CAAC;YAC9C,IAAI,WAAW,GAA2B,MAAM,CAAC;YAEjD,OAAO,MAAM,CAAC,KAAK,EAAE,EAAE,OAAO,EAAE,EAAE,CAAC,WAAW,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,EAAE,IAAI,EAAE,WAAW,CAAC,OAAO,CAAC,KAAK,EAAE,EAAE,EAAE,CAAC,CAAC;SAC1G;QAED;YACI,OAAO,KAAK,CAAA;KACnB;AACL,CAAC\"}","dtsmap":{"name":"C:/Users/Milan/source/repos/react-crud-master/src/components/crudModal/crudModal.reducer.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"crudModal.reducer.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"crudModal.reducer.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,mBAAmB,EAA8B,mBAAmB,EAA4H,MAAM,mBAAmB,CAAA;AAIlO,eAAO,MAAM,YAAY;;;;;;;;;;;;;CAaxB,CAAA;AAED,wBAAgB,gBAAgB,CAC5B,KAAK,iCAAoD,EACzD,MAAM,EAAE,mBAAmB,GAC5B,mBAAmB,CAiCrB\"}"},"dts":{"name":"C:/Users/Milan/source/repos/react-crud-master/src/components/crudModal/crudModal.reducer.d.ts","writeByteOrderMark":false,"text":"import { CrudModalStateProps, CrudModalActionType } from './crudModal.types';\r\nexport declare const initialState: {\r\n    colModels: never[];\r\n    data: never[];\r\n    width: number;\r\n    sortColumn: null;\r\n    selectedRow: null;\r\n    startOffset: number;\r\n    columnToResize: null;\r\n    show: boolean;\r\n    reactableId: number;\r\n    modalState: null;\r\n    tableWidth: number;\r\n    emptyModalState: null;\r\n};\r\nexport declare function crudModalReducer(state: CrudModalStateProps | undefined, action: CrudModalActionType): CrudModalStateProps;\r\n//# sourceMappingURL=crudModal.reducer.d.ts.map"}}

{"code":"import { __awaiter } from \"tslib\";\r\nimport { ReactCrudMasterActionTypeNames } from './reactCrudMaster.types';\r\nimport { REACT_CRUD_MASTER } from '../../actions/actionNamespaces';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nimport * as CrudModalActions from '../crudModal/crudModal.actions';\r\nconst namespace = REACT_CRUD_MASTER;\r\nexport function privateSetColModels(colModels) {\r\n    let clonedColModels = cloneDeep(colModels);\r\n    let tableWidth = 0;\r\n    clonedColModels.forEach((colModel) => {\r\n        tableWidth += getUsefullColModelWith(colModel);\r\n        colModel.showColMenuModal = false;\r\n    });\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SET_COL_MODELS,\r\n        payload: {\r\n            colModels: clonedColModels,\r\n            tableWidth\r\n        },\r\n        namespace\r\n    };\r\n}\r\nfunction getUsefullColModelWith(colModel) {\r\n    if (colModel.width != null)\r\n        return colModel.width;\r\n    return 0;\r\n}\r\nexport const setColModels = (colModels) => {\r\n    return (dispatch) => __awaiter(void 0, void 0, void 0, function* () {\r\n        dispatch(privateSetColModels(colModels));\r\n        dispatch(CrudModalActions.generateColNamePropertiesInRowData(colModels));\r\n    });\r\n};\r\nexport function setData(data) {\r\n    let clonedData = cloneDeep(data);\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SET_DATA,\r\n        payload: { data: clonedData },\r\n        namespace,\r\n    };\r\n}\r\nexport function resizeColumn(e) {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.RESIZE_COLUMN,\r\n        payload: { e, },\r\n        namespace,\r\n    };\r\n}\r\nexport function setColumnToResize(column = null, e = null) {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SET_COLUMN_TO_RESIZE,\r\n        payload: {\r\n            e,\r\n            column\r\n        },\r\n        namespace,\r\n    };\r\n}\r\nexport function resetTableoffsetWidth() {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SET_INITIAL_TABLE_OFFSET_WIDTH,\r\n        namespace,\r\n        payload: null\r\n    };\r\n}\r\nexport function changeOrderDirection(column) {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.CHANGE_ORDER_DIRECTION,\r\n        namespace,\r\n        payload: { column }\r\n    };\r\n}\r\nexport function selectRow(row) {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SELECT_ROW,\r\n        namespace,\r\n        payload: { row }\r\n    };\r\n}\r\nexport function setTableTitle(tableTitle) {\r\n    return {\r\n        type: ReactCrudMasterActionTypeNames.SET_TABLE_TITLE,\r\n        namespace,\r\n        payload: { tableTitle }\r\n    };\r\n}\r\n//# sourceMappingURL=reactCrudMaster.actions.js.map","references":["C:/Users/Milan/source/repos/react-crud-master/src/components/reactCrudMaster/reactCrudMaster.types.ts","C:/Users/Milan/source/repos/react-crud-master/src/types/colModel.ts","C:/Users/Milan/source/repos/react-crud-master/src/actions/actionNamespaces.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/@types/lodash/ts3.1/cloneDeep.d.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/redux-thunk/index.d.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/redux/index.d.ts","C:/Users/Milan/source/repos/react-crud-master/src/components/crudModal/crudModal.actions.ts"],"map":"{\"version\":3,\"file\":\"reactCrudMaster.actions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../../src/components/reactCrudMaster/reactCrudMaster.actions.ts\"],\"names\":[],\"mappings\":\";AAAA,OAAO,EAAE,8BAA8B,EAA6B,MAAM,yBAAyB,CAAA;AAEnG,OAAO,EAAE,iBAAiB,EAAE,MAAM,gCAAgC,CAAC;AACnE,OAAO,SAAS,MAAM,kBAAkB,CAAC;AAGzC,OAAO,KAAK,gBAAgB,MAAM,gCAAgC,CAAA;AAElE,MAAM,SAAS,GAAG,iBAAiB,CAAC;AAEpC,MAAM,UAAU,mBAAmB,CAAC,SAAqB;IACrD,IAAI,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;IAE3C,IAAI,UAAU,GAAW,CAAC,CAAC;IAC3B,eAAe,CAAC,OAAO,CAAC,CAAC,QAAkB,EAAE,EAAE;QAC3C,UAAU,IAAI,sBAAsB,CAAC,QAAQ,CAAC,CAAC;QAC/C,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;IACtC,CAAC,CAAC,CAAC;IAEH,OAAQ;QACJ,IAAI,EAAE,8BAA8B,CAAC,cAAc;QACnD,OAAO,EAAE;YACL,SAAS,EAAE,eAAe;YAC1B,UAAU;SACb;QACD,SAAS;KACZ,CAAA;AACL,CAAC;AAED,SAAS,sBAAsB,CAAC,QAAiB;IAC7C,IAAG,QAAQ,CAAC,KAAK,IAAE,IAAI;QACnB,OAAO,QAAQ,CAAC,KAAK,CAAC;IAC1B,OAAO,CAAC,CAAC;AACb,CAAC;AAED,MAAM,CAAC,MAAM,YAAY,GAAG,CAAC,SAAoB,EAAiD,EAAE;IAChG,OAAO,CAAO,QAA0C,EAAiB,EAAE;QACvE,QAAQ,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,CAAC;QACzC,QAAQ,CAAC,gBAAgB,CAAC,kCAAkC,CAAC,SAAS,CAAC,CAAC,CAAA;IAC5E,CAAC,CAAA,CAAA;AACL,CAAC,CAAA;AAED,MAAM,UAAU,OAAO,CAAC,IAAW;IAC/B,IAAI,UAAU,GAAG,SAAS,CAAC,IAAI,CAAC,CAAC;IACjC,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,QAAQ;QAC5C,OAAO,EAAC,EAAC,IAAI,EAAC,UAAU,EAAC;QACzB,SAAS;KACZ,CAAA;AACL,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,CAAa;IACtC,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,aAAa;QACjD,OAAO,EAAC,EAAC,CAAC,GAAE;QACZ,SAAS;KACZ,CAAA;AACL,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,SAA2B,IAAI,EAAC,IAAQ,IAAI;IAC1E,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,oBAAoB;QACxD,OAAO,EAAC;YACJ,CAAC;YACD,MAAM;SACT;QACD,SAAS;KACZ,CAAA;AACL,CAAC;AAED,MAAM,UAAU,qBAAqB;IACjC,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,8BAA8B;QAClE,SAAS;QACT,OAAO,EAAC,IAAI;KACf,CAAA;AACL,CAAC;AAGD,MAAM,UAAU,oBAAoB,CAAC,MAAiB;IAClD,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,sBAAsB;QAC1D,SAAS;QACT,OAAO,EAAC,EAAC,MAAM,EAAC;KACnB,CAAA;AACL,CAAC;AAED,MAAM,UAAU,SAAS,CAAC,GAAQ;IAC9B,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,UAAU;QAC9C,SAAS;QACT,OAAO,EAAC,EAAC,GAAG,EAAC;KAChB,CAAA;AACL,CAAC;AAED,MAAM,UAAU,aAAa,CAAC,UAAe;IACzC,OAAO;QACH,IAAI,EAAC,8BAA8B,CAAC,eAAe;QACnD,SAAS;QACT,OAAO,EAAC,EAAC,UAAU,EAAC;KACvB,CAAA;AACL,CAAC\"}","dtsmap":{"name":"C:/Users/Milan/source/repos/react-crud-master/src/components/reactCrudMaster/reactCrudMaster.actions.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"reactCrudMaster.actions.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"reactCrudMaster.actions.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAkC,yBAAyB,EAAE,MAAM,yBAAyB,CAAA;AACnG,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAGhD,OAAO,EAAE,WAAW,EAAiB,MAAM,aAAa,CAAC;AACzD,OAAO,EAAE,SAAS,EAAE,MAAM,OAAO,CAAC;AAKlC,wBAAgB,mBAAmB,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,yBAAyB,CAiBpF;AAQD,eAAO,MAAM,YAAY,0EAKxB,CAAA;AAED,wBAAgB,OAAO,CAAC,IAAI,EAAE,GAAG,EAAE,GAAG,yBAAyB,CAO9D;AAED,wBAAgB,YAAY,CAAC,CAAC,EAAE,UAAU,GAAG,yBAAyB,CAMrE;AAED,wBAAgB,iBAAiB,CAAC,MAAM,GAAC,CAAC,QAAQ,GAAG,IAAI,CAAQ,EAAC,CAAC,GAAE,GAAS,GAAG,yBAAyB,CASzG;AAED,wBAAgB,qBAAqB,IAAI,yBAAyB,CAMjE;AAGD,wBAAgB,oBAAoB,CAAC,MAAM,EAAG,QAAQ,GAAG,yBAAyB,CAMjF;AAED,wBAAgB,SAAS,CAAC,GAAG,EAAE,GAAG,GAAG,yBAAyB,CAM7D;AAED,wBAAgB,aAAa,CAAC,UAAU,EAAE,GAAG,GAAG,yBAAyB,CAMxE\"}"},"dts":{"name":"C:/Users/Milan/source/repos/react-crud-master/src/components/reactCrudMaster/reactCrudMaster.actions.d.ts","writeByteOrderMark":false,"text":"import { ReactCrudMasterActionType } from './reactCrudMaster.types';\r\nimport { ColModel } from '../../types/colModel';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { AnyAction } from 'redux';\r\nexport declare function privateSetColModels(colModels: ColModel[]): ReactCrudMasterActionType;\r\nexport declare const setColModels: (colModels: ColModel[]) => ThunkAction<Promise<void>, {}, {}, AnyAction>;\r\nexport declare function setData(data: any[]): ReactCrudMasterActionType;\r\nexport declare function resizeColumn(e: MouseEvent): ReactCrudMasterActionType;\r\nexport declare function setColumnToResize(column?: (ColModel | null), e?: any): ReactCrudMasterActionType;\r\nexport declare function resetTableoffsetWidth(): ReactCrudMasterActionType;\r\nexport declare function changeOrderDirection(column: ColModel): ReactCrudMasterActionType;\r\nexport declare function selectRow(row: any): ReactCrudMasterActionType;\r\nexport declare function setTableTitle(tableTitle: any): ReactCrudMasterActionType;\r\n//# sourceMappingURL=reactCrudMaster.actions.d.ts.map"}}

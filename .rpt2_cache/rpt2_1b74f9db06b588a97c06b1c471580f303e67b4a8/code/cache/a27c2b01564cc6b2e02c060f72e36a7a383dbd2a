{"code":"import { ReactableActionTypeNames } from './reactable.types';\r\nimport { REACTABLE } from '../../actions/actionNamespaces';\r\nimport cloneDeep from 'lodash/cloneDeep';\r\nvar namespace = REACTABLE;\r\nexport function setColModels(colModels) {\r\n    var clonedColModels = cloneDeep(colModels);\r\n    var tableWidth = 0;\r\n    clonedColModels.forEach(function (colModel) {\r\n        tableWidth += colModel.width;\r\n        colModel.showColMenuModal = false;\r\n    });\r\n    var x = {\r\n        type: ReactableActionTypeNames.SET_COL_MODELS,\r\n        payload: {\r\n            colModels: clonedColModels,\r\n            tableWidth: tableWidth\r\n        },\r\n        namespace: namespace\r\n    };\r\n    return x;\r\n}\r\nexport function resizeColumn(e) {\r\n    return {\r\n        type: ReactableActionTypeNames.RESIZE_COLUMN,\r\n        payload: {\r\n            e: e,\r\n        },\r\n        namespace: namespace,\r\n    };\r\n}\r\nexport function setColumnToResize(column, e) {\r\n    if (column === void 0) { column = null; }\r\n    if (e === void 0) { e = null; }\r\n    return {\r\n        type: ReactableActionTypeNames.SET_COLUMN_TO_RESIZE,\r\n        payload: {\r\n            e: e,\r\n            column: column\r\n        },\r\n        namespace: namespace,\r\n    };\r\n}\r\nexport function setInitialTableoffsetWidth() {\r\n    return {\r\n        type: ReactableActionTypeNames.SET_INITIAL_TABLE_OFFSET_WIDTH,\r\n        namespace: namespace,\r\n        payload: null\r\n    };\r\n}\r\n//# sourceMappingURL=reactable.actions.js.map","references":["C:/Users/Milan/source/repos/react-crud-master/src/components/reactable/reactable.types.ts","C:/Users/Milan/source/repos/react-crud-master/src/types/ColModel.ts","C:/Users/Milan/source/repos/react-crud-master/src/actions/actionNamespaces.ts","C:/Users/Milan/source/repos/react-crud-master/node_modules/@types/lodash/ts3.1/cloneDeep.d.ts"],"map":"{\"version\":3,\"file\":\"reactable.actions.js\",\"sourceRoot\":\"\",\"sources\":[\"../../../../src/components/reactable/reactable.actions.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAE,wBAAwB,EAAiE,MAAM,mBAAmB,CAAA;AAE3H,OAAO,EAAE,SAAS,EAAE,MAAM,gCAAgC,CAAC;AAC3D,OAAO,SAAS,MAAM,kBAAkB,CAAC;AAEzC,IAAM,SAAS,GAAG,SAAS,CAAC;AAE5B,MAAM,UAAU,YAAY,CAAC,SAAqB;IAC9C,IAAI,eAAe,GAAG,SAAS,CAAC,SAAS,CAAC,CAAC;IAE3C,IAAI,UAAU,GAAW,CAAC,CAAC;IAC3B,eAAe,CAAC,OAAO,CAAC,UAAC,QAAkB;QACvC,UAAU,IAAI,QAAQ,CAAC,KAAK,CAAC;QAC7B,QAAQ,CAAC,gBAAgB,GAAG,KAAK,CAAC;IACtC,CAAC,CAAC,CAAC;IACH,IAAI,CAAC,GAAE;QACH,IAAI,EAAE,wBAAwB,CAAC,cAAc;QAC7C,OAAO,EAAE;YACL,SAAS,EAAE,eAAe;YAC1B,UAAU,YAAA;SACb;QACD,SAAS,WAAA;KACZ,CAAA;IACD,OAAO,CAAC,CAAC;AACb,CAAC;AAED,MAAM,UAAU,YAAY,CAAC,CAAa;IACtC,OAAO;QACH,IAAI,EAAC,wBAAwB,CAAC,aAAa;QAC3C,OAAO,EAAC;YACJ,CAAC,GAAA;SACJ;QACD,SAAS,WAAA;KACZ,CAAA;AACL,CAAC;AAED,MAAM,UAAU,iBAAiB,CAAC,MAA+B,EAAC,CAAY;IAA5C,uBAAA,EAAA,aAA+B;IAAC,kBAAA,EAAA,QAAY;IAC1E,OAAO;QACH,IAAI,EAAC,wBAAwB,CAAC,oBAAoB;QAClD,OAAO,EAAC;YACJ,CAAC,GAAA;YACD,MAAM,QAAA;SACT;QACD,SAAS,WAAA;KACZ,CAAA;AACL,CAAC;AAED,MAAM,UAAU,0BAA0B;IACtC,OAAO;QACH,IAAI,EAAC,wBAAwB,CAAC,8BAA8B;QAC5D,SAAS,WAAA;QACT,OAAO,EAAC,IAAI;KACf,CAAA;AACL,CAAC\"}","dtsmap":{"name":"C:/Users/Milan/source/repos/react-crud-master/components/reactable/reactable.actions.d.ts.map","writeByteOrderMark":false,"text":"{\"version\":3,\"file\":\"reactable.actions.d.ts\",\"sourceRoot\":\"\",\"sources\":[\"../../src/components/reactable/reactable.actions.ts\"],\"names\":[],\"mappings\":\"AAAA,OAAO,EAAsE,mBAAmB,EAAE,MAAM,mBAAmB,CAAA;AAC3H,OAAO,EAAE,QAAQ,EAAE,MAAM,sBAAsB,CAAC;AAMhD,wBAAgB,YAAY,CAAC,SAAS,EAAE,QAAQ,EAAE,GAAG,mBAAmB,CAiBvE;AAED,wBAAgB,YAAY,CAAC,CAAC,EAAE,UAAU,GAAG,mBAAmB,CAQ/D;AAED,wBAAgB,iBAAiB,CAAC,MAAM,GAAC,CAAC,QAAQ,GAAG,IAAI,CAAQ,EAAC,CAAC,GAAE,GAAS,GAAG,mBAAmB,CASnG;AAED,wBAAgB,0BAA0B,IAAI,mBAAmB,CAMhE\"}"},"dts":{"name":"C:/Users/Milan/source/repos/react-crud-master/components/reactable/reactable.actions.d.ts","writeByteOrderMark":false,"text":"import { ReactableActionType } from './reactable.types';\r\nimport { ColModel } from '../../types/ColModel';\r\nexport declare function setColModels(colModels: ColModel[]): ReactableActionType;\r\nexport declare function resizeColumn(e: MouseEvent): ReactableActionType;\r\nexport declare function setColumnToResize(column?: (ColModel | null), e?: any): ReactableActionType;\r\nexport declare function setInitialTableoffsetWidth(): ReactableActionType;\r\n//# sourceMappingURL=reactable.actions.d.ts.map"}}
